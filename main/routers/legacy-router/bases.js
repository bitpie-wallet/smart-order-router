"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CUSTOM_BASES = exports.ADDITIONAL_BASES = exports.BASES_TO_CHECK_TRADES_AGAINST = void 0;
const globalChainId_1 = require("../../globalChainId");
const token_provider_1 = require("../../providers/token-provider");
const chains_1 = require("../../util/chains");
const BASES_TO_CHECK_TRADES_AGAINST = (_tokenProvider) => {
    return {
        [globalChainId_1.ChainId.MAINNET]: [
            chains_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.MAINNET],
            token_provider_1.DAI_MAINNET,
            token_provider_1.USDC_MAINNET,
            token_provider_1.USDT_MAINNET,
            token_provider_1.WBTC_MAINNET,
        ],
        [globalChainId_1.ChainId.GOERLI]: [chains_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.GOERLI]],
        [globalChainId_1.ChainId.SEPOLIA]: [chains_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.SEPOLIA]],
        [globalChainId_1.ChainId.OPTIMISM]: [chains_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.OPTIMISM]],
        [globalChainId_1.ChainId.OPTIMISM_GOERLI]: [
            chains_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.OPTIMISM_GOERLI],
        ],
        [globalChainId_1.ChainId.OPTIMISM_SEPOLIA]: [
            chains_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.OPTIMISM_SEPOLIA],
        ],
        [globalChainId_1.ChainId.ARBITRUM_ONE]: [chains_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.ARBITRUM_ONE]],
        [globalChainId_1.ChainId.ARBITRUM_GOERLI]: [
            chains_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.ARBITRUM_GOERLI],
        ],
        [globalChainId_1.ChainId.ARBITRUM_SEPOLIA]: [
            chains_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.ARBITRUM_SEPOLIA],
        ],
        [globalChainId_1.ChainId.POLYGON]: [token_provider_1.WMATIC_POLYGON],
        [globalChainId_1.ChainId.POLYGON_MUMBAI]: [token_provider_1.WMATIC_POLYGON_MUMBAI],
        [globalChainId_1.ChainId.CELO]: [chains_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.CELO]],
        [globalChainId_1.ChainId.CELO_ALFAJORES]: [chains_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.CELO_ALFAJORES]],
        [globalChainId_1.ChainId.GNOSIS]: [chains_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.GNOSIS]],
        [globalChainId_1.ChainId.MOONBEAM]: [chains_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.MOONBEAM]],
        [globalChainId_1.ChainId.BNB]: [
            chains_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.BNB],
            token_provider_1.BUSD_BNB,
            token_provider_1.DAI_BNB,
            token_provider_1.USDC_BNB,
            token_provider_1.USDT_BNB,
            token_provider_1.BTC_BNB,
        ],
        [globalChainId_1.ChainId.AVALANCHE]: [
            chains_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.AVALANCHE],
            token_provider_1.USDC_AVAX,
            token_provider_1.DAI_AVAX,
        ],
        [globalChainId_1.ChainId.BASE]: [chains_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.BASE], token_provider_1.USDC_BASE],
        [globalChainId_1.ChainId.BASE_GOERLI]: [chains_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.BASE_GOERLI]],
        [globalChainId_1.ChainId.ZORA]: [chains_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.ZORA]],
        [globalChainId_1.ChainId.ZORA_SEPOLIA]: [chains_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.ZORA_SEPOLIA]],
        [globalChainId_1.ChainId.ROOTSTOCK]: [chains_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.ROOTSTOCK]],
        [globalChainId_1.ChainId.BLAST]: [chains_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.BLAST], token_provider_1.USDB_BLAST],
        [globalChainId_1.ChainId.ZKSYNC]: [
            chains_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.ZKSYNC],
            token_provider_1.USDCE_ZKSYNC,
            token_provider_1.USDC_ZKSYNC,
        ],
        [globalChainId_1.ChainId.WORLDCHAIN]: [
            chains_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.WORLDCHAIN],
            token_provider_1.USDC_WORLDCHAIN,
            token_provider_1.WLD_WORLDCHAIN,
            token_provider_1.WBTC_WORLDCHAIN,
        ],
        [globalChainId_1.ChainId.UNICHAIN_SEPOLIA]: [
            chains_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.UNICHAIN_SEPOLIA],
            token_provider_1.USDC_UNICHAIN_SEPOLIA,
        ],
        [globalChainId_1.ChainId.UNICHAIN]: [
            chains_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.UNICHAIN],
            token_provider_1.DAI_UNICHAIN,
            token_provider_1.USDC_UNICHAIN,
        ],
        [globalChainId_1.ChainId.MONAD_TESTNET]: [
            chains_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.MONAD_TESTNET],
            token_provider_1.USDT_MONAD_TESTNET,
        ],
        [globalChainId_1.ChainId.BASE_SEPOLIA]: [
            chains_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.BASE_SEPOLIA],
            token_provider_1.USDC_BASE_SEPOLIA,
        ],
        [globalChainId_1.ChainId.SONEIUM]: [
            chains_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.SONEIUM],
            token_provider_1.USDC_SONEIUM,
        ],
        [globalChainId_1.ChainId.TRON]: [chains_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.TRON], token_provider_1.USDT_BASE_TRON],
    };
};
exports.BASES_TO_CHECK_TRADES_AGAINST = BASES_TO_CHECK_TRADES_AGAINST;
const getBasePairByAddress = async (tokenProvider, _chainId, fromAddress, toAddress) => {
    const accessor = await tokenProvider.getTokens([toAddress]);
    const toToken = accessor.getTokenByAddress(toAddress);
    if (!toToken)
        return {};
    return {
        [fromAddress]: [toToken],
    };
};
const ADDITIONAL_BASES = async (tokenProvider) => {
    return {
        [globalChainId_1.ChainId.MAINNET]: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, (await getBasePairByAddress(tokenProvider, globalChainId_1.ChainId.MAINNET, '0xA948E86885e12Fb09AfEF8C52142EBDbDf73cD18', '0x1f9840a85d5af5bf1d1762f925bdaddc4201f984'))), (await getBasePairByAddress(tokenProvider, globalChainId_1.ChainId.MAINNET, '0x561a4717537ff4AF5c687328c0f7E90a319705C0', '0x1f9840a85d5af5bf1d1762f925bdaddc4201f984'))), (await getBasePairByAddress(tokenProvider, globalChainId_1.ChainId.MAINNET, '0x956F47F50A910163D8BF957Cf5846D573E7f87CA', '0xc7283b66Eb1EB5FB86327f08e1B5816b0720212B'))), (await getBasePairByAddress(tokenProvider, globalChainId_1.ChainId.MAINNET, '0xc7283b66Eb1EB5FB86327f08e1B5816b0720212B', '0x956F47F50A910163D8BF957Cf5846D573E7f87CA'))), (await getBasePairByAddress(tokenProvider, globalChainId_1.ChainId.MAINNET, '0x853d955acef822db058eb8505911ed77f175b99e', '0x3432b6a60d23ca0dfca7761b7ab56459d9c964d0'))), (await getBasePairByAddress(tokenProvider, globalChainId_1.ChainId.MAINNET, '0x3432b6a60d23ca0dfca7761b7ab56459d9c964d0', '0x853d955acef822db058eb8505911ed77f175b99e'))), (await getBasePairByAddress(tokenProvider, globalChainId_1.ChainId.MAINNET, '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599', '0xeb4c2781e4eba804ce9a9803c67d0893436bb27d'))), (await getBasePairByAddress(tokenProvider, globalChainId_1.ChainId.MAINNET, '0xeb4c2781e4eba804ce9a9803c67d0893436bb27d', '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599'))),
    };
};
exports.ADDITIONAL_BASES = ADDITIONAL_BASES;
/**
 * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these
 * tokens.
 */
const CUSTOM_BASES = async (tokenProvider) => {
    return {
        [globalChainId_1.ChainId.MAINNET]: Object.assign(Object.assign({}, (await getBasePairByAddress(tokenProvider, globalChainId_1.ChainId.MAINNET, '0xd46ba6d942050d489dbd938a2c909a5d5039a161', token_provider_1.DAI_MAINNET.address))), (await getBasePairByAddress(tokenProvider, globalChainId_1.ChainId.MAINNET, '0xd46ba6d942050d489dbd938a2c909a5d5039a161', chains_1.WRAPPED_NATIVE_CURRENCY[1].address))),
    };
};
exports.CUSTOM_BASES = CUSTOM_BASES;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvcm91dGVycy9sZWdhY3ktcm91dGVyL2Jhc2VzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUdBLHVEQUE4QztBQUM5QyxtRUE2QndDO0FBQ3hDLDhDQUE0RDtBQU9yRCxNQUFNLDZCQUE2QixHQUFHLENBQzNDLGNBQThCLEVBQ2QsRUFBRTtJQUNsQixPQUFPO1FBQ0wsQ0FBQyx1QkFBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFO1lBQ2pCLGdDQUF1QixDQUFDLHVCQUFPLENBQUMsT0FBTyxDQUFFO1lBQ3pDLDRCQUFXO1lBQ1gsNkJBQVk7WUFDWiw2QkFBWTtZQUNaLDZCQUFZO1NBQ2I7UUFDRCxDQUFDLHVCQUFPLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxnQ0FBdUIsQ0FBQyx1QkFBTyxDQUFDLE1BQU0sQ0FBRSxDQUFDO1FBQzVELENBQUMsdUJBQU8sQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLGdDQUF1QixDQUFDLHVCQUFPLENBQUMsT0FBTyxDQUFFLENBQUM7UUFDOUQsQ0FBQyx1QkFBTyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsZ0NBQXVCLENBQUMsdUJBQU8sQ0FBQyxRQUFRLENBQUUsQ0FBQztRQUNoRSxDQUFDLHVCQUFPLENBQUMsZUFBZSxDQUFDLEVBQUU7WUFDekIsZ0NBQXVCLENBQUMsdUJBQU8sQ0FBQyxlQUFlLENBQUU7U0FDbEQ7UUFDRCxDQUFDLHVCQUFPLENBQUMsZ0JBQWdCLENBQUMsRUFBRTtZQUMxQixnQ0FBdUIsQ0FBQyx1QkFBTyxDQUFDLGdCQUFnQixDQUFFO1NBQ25EO1FBQ0QsQ0FBQyx1QkFBTyxDQUFDLFlBQVksQ0FBQyxFQUFFLENBQUMsZ0NBQXVCLENBQUMsdUJBQU8sQ0FBQyxZQUFZLENBQUUsQ0FBQztRQUN4RSxDQUFDLHVCQUFPLENBQUMsZUFBZSxDQUFDLEVBQUU7WUFDekIsZ0NBQXVCLENBQUMsdUJBQU8s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