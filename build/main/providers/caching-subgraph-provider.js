"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CachingSubgraphProvider = exports.BASES_TO_CHECK_TRADES_AGAINST = void 0;
const globalChainId_1 = require("../globalChainId");
const util_1 = require("../util");
const token_provider_1 = require("./token-provider");
exports.BASES_TO_CHECK_TRADES_AGAINST = {
    [globalChainId_1.ChainId.MAINNET]: [
        (0, util_1.nativeOnChain)(globalChainId_1.ChainId.MAINNET),
        util_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.MAINNET],
        token_provider_1.DAI_MAINNET,
        token_provider_1.USDC_MAINNET,
        token_provider_1.USDT_MAINNET,
        token_provider_1.WBTC_MAINNET,
        token_provider_1.WSTETH_MAINNET,
    ],
    [globalChainId_1.ChainId.GOERLI]: [util_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.GOERLI]],
    [globalChainId_1.ChainId.SEPOLIA]: [
        (0, util_1.nativeOnChain)(globalChainId_1.ChainId.SEPOLIA),
        util_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.SEPOLIA],
    ],
    //v2 not deployed on [arbitrum, polygon, celo, gnosis, moonbeam, bnb, avalanche] and their testnets
    [globalChainId_1.ChainId.OPTIMISM]: [
        (0, util_1.nativeOnChain)(globalChainId_1.ChainId.OPTIMISM),
        util_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.OPTIMISM],
        token_provider_1.USDC_OPTIMISM,
        token_provider_1.DAI_OPTIMISM,
        token_provider_1.USDT_OPTIMISM,
        token_provider_1.WBTC_OPTIMISM,
        token_provider_1.OP_OPTIMISM,
    ],
    [globalChainId_1.ChainId.ARBITRUM_ONE]: [
        (0, util_1.nativeOnChain)(globalChainId_1.ChainId.ARBITRUM_ONE),
        util_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.ARBITRUM_ONE],
        token_provider_1.WBTC_ARBITRUM,
        token_provider_1.DAI_ARBITRUM,
        token_provider_1.USDC_ARBITRUM,
        token_provider_1.USDC_NATIVE_ARBITRUM,
        token_provider_1.USDT_ARBITRUM,
        token_provider_1.ARB_ARBITRUM,
    ],
    [globalChainId_1.ChainId.ARBITRUM_GOERLI]: [],
    [globalChainId_1.ChainId.ARBITRUM_SEPOLIA]: [],
    [globalChainId_1.ChainId.OPTIMISM_GOERLI]: [],
    [globalChainId_1.ChainId.OPTIMISM_SEPOLIA]: [],
    [globalChainId_1.ChainId.POLYGON]: [
        (0, util_1.nativeOnChain)(globalChainId_1.ChainId.POLYGON),
        token_provider_1.USDC_POLYGON,
        token_provider_1.WETH_POLYGON,
        token_provider_1.WMATIC_POLYGON,
    ],
    [globalChainId_1.ChainId.POLYGON_MUMBAI]: [],
    [globalChainId_1.ChainId.CELO]: [token_provider_1.CELO, token_provider_1.CUSD_CELO, token_provider_1.CEUR_CELO, token_provider_1.DAI_CELO],
    [globalChainId_1.ChainId.CELO_ALFAJORES]: [],
    [globalChainId_1.ChainId.GNOSIS]: [],
    [globalChainId_1.ChainId.MOONBEAM]: [
        util_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.MOONBEAM],
        token_provider_1.DAI_MOONBEAM,
        token_provider_1.USDC_MOONBEAM,
        token_provider_1.WBTC_MOONBEAM,
    ],
    [globalChainId_1.ChainId.BNB]: [
        (0, util_1.nativeOnChain)(globalChainId_1.ChainId.BNB),
        util_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.BNB],
        token_provider_1.BUSD_BNB,
        token_provider_1.DAI_BNB,
        token_provider_1.USDC_BNB,
        token_provider_1.USDT_BNB,
        token_provider_1.BTC_BNB,
        token_provider_1.ETH_BNB,
    ],
    [globalChainId_1.ChainId.AVALANCHE]: [
        util_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.AVALANCHE],
        token_provider_1.USDC_AVAX,
        token_provider_1.DAI_AVAX,
    ],
    [globalChainId_1.ChainId.BASE_GOERLI]: [],
    [globalChainId_1.ChainId.BASE]: [
        (0, util_1.nativeOnChain)(globalChainId_1.ChainId.BASE),
        util_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.BASE],
        token_provider_1.USDC_BASE,
    ],
    [globalChainId_1.ChainId.ZORA]: [
        (0, util_1.nativeOnChain)(globalChainId_1.ChainId.ZORA),
        util_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.ZORA],
    ],
    [globalChainId_1.ChainId.ZORA_SEPOLIA]: [util_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.ZORA_SEPOLIA]],
    [globalChainId_1.ChainId.ROOTSTOCK]: [util_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.ROOTSTOCK]],
    [globalChainId_1.ChainId.BLAST]: [
        (0, util_1.nativeOnChain)(globalChainId_1.ChainId.BLAST),
        util_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.BLAST],
        token_provider_1.USDB_BLAST,
    ],
    [globalChainId_1.ChainId.ZKSYNC]: [
        util_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.ZKSYNC],
        token_provider_1.USDCE_ZKSYNC,
        token_provider_1.USDC_ZKSYNC,
    ],
    [globalChainId_1.ChainId.WORLDCHAIN]: [
        (0, util_1.nativeOnChain)(globalChainId_1.ChainId.WORLDCHAIN),
        util_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.WORLDCHAIN],
        token_provider_1.USDC_WORLDCHAIN,
        token_provider_1.WLD_WORLDCHAIN,
        token_provider_1.WBTC_WORLDCHAIN,
    ],
    [globalChainId_1.ChainId.UNICHAIN_SEPOLIA]: [
        (0, util_1.nativeOnChain)(globalChainId_1.ChainId.UNICHAIN_SEPOLIA),
        util_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.UNICHAIN_SEPOLIA],
        token_provider_1.USDC_UNICHAIN_SEPOLIA,
    ],
    [globalChainId_1.ChainId.UNICHAIN]: [
        (0, util_1.nativeOnChain)(globalChainId_1.ChainId.UNICHAIN),
        util_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.UNICHAIN],
        token_provider_1.DAI_UNICHAIN,
        token_provider_1.USDC_UNICHAIN,
    ],
    [globalChainId_1.ChainId.BASE_SEPOLIA]: [
        (0, util_1.nativeOnChain)(globalChainId_1.ChainId.BASE_SEPOLIA),
        util_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.BASE_SEPOLIA],
        token_provider_1.USDC_BASE_SEPOLIA,
    ],
    [globalChainId_1.ChainId.MONAD_TESTNET]: [
        (0, util_1.nativeOnChain)(globalChainId_1.ChainId.MONAD_TESTNET),
        util_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.MONAD_TESTNET],
        token_provider_1.USDT_MONAD_TESTNET,
    ],
    [globalChainId_1.ChainId.SONEIUM]: [
        (0, util_1.nativeOnChain)(globalChainId_1.ChainId.SONEIUM),
        util_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.SONEIUM],
        token_provider_1.USDC_SONEIUM,
    ],
    [globalChainId_1.ChainId.TRON]: [
        (0, util_1.nativeOnChain)(globalChainId_1.ChainId.TRON),
        util_1.WRAPPED_NATIVE_CURRENCY[globalChainId_1.ChainId.TRON],
        token_provider_1.USDT_BASE_TRON,
    ],
};
class CachingSubgraphProvider {
    /**
     * Creates an instance of CachingV3SubgraphProvider.
     * @param chainId The chain id to use.
     * @param subgraphProvider The provider to use to get the subgraph pools when not in the cache.
     * @param cache Cache instance to hold cached pools.
     * @param protocol Subgraph protocol version
     */
    constructor(chainId, subgraphProvider, cache, protocol) {
        this.chainId = chainId;
        this.subgraphProvider = subgraphProvider;
        this.cache = cache;
        this.protocol = protocol;
        this.SUBGRAPH_KEY = (chainId) => `subgraph-pools-${this.protocol}-${chainId}`;
    }
    async getPools() {
        const cachedPools = await this.cache.get(this.SUBGRAPH_KEY(this.chainId));
        if (cachedPools) {
            return cachedPools;
        }
        const pools = await this.subgraphProvider.getPools();
        await this.cache.set(this.SUBGRAPH_KEY(this.chainId), pools);
        return pools;
    }
}
exports.CachingSubgraphProvider = CachingSubgraphProvider;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGluZy1zdWJncmFwaC1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wcm92aWRlcnMvY2FjaGluZy1zdWJncmFwaC1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFHQSxvREFBMkM7QUFFM0Msa0NBQWlFO0FBSWpFLHFEQWlEMEI7QUFPYixRQUFBLDZCQUE2QixHQUFtQjtJQUMzRCxDQUFDLHVCQUFPLENBQUMsT0FBTyxDQUFDLEVBQUU7UUFDakIsSUFBQSxvQkFBYSxFQUFDLHVCQUFPLENBQUMsT0FBTyxDQUFDO1FBQzlCLDhCQUF1QixDQUFDLHVCQUFPLENBQUMsT0FBTyxDQUFFO1FBQ3pDLDRCQUFXO1FBQ1gsNkJBQVk7UUFDWiw2QkFBWTtRQUNaLDZCQUFZO1FBQ1osK0JBQWM7S0FDZjtJQUNELENBQUMsdUJBQU8sQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLDhCQUF1QixDQUFDLHVCQUFPLENBQUMsTUFBTSxDQUFFLENBQUM7SUFDNUQsQ0FBQyx1QkFBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFO1FBQ2pCLElBQUEsb0JBQWEsRUFBQyx1QkFBTyxDQUFDLE9BQU8sQ0FBQztRQUM5Qiw4QkFBdUIsQ0FBQyx1QkFBTyxDQUFDLE9BQU8sQ0FBRTtLQUMxQztJQUNELG1HQUFtRztJQUNuRyxDQUFDLHVCQUFPLENBQUMsUUFBUSxDQUFDLEVBQUU7UUFDbEIsSUFBQSxvQkFBYSxFQUFDLHVCQUFPLENBQUMsUUFBUSxDQUFDO1FBQy9CLDhCQUF1QixDQUFDLHVCQUFPLENBQUMsUUFBUSxDQUFFO1FBQzFDLDhCQUFhO1FBQ2IsNkJBQVk7UUFDWiw4QkFBYTtRQUNiLDhCQUFhO1FBQ2IsNEJBQVc7S0FDWjtJQUNELENBQUMsdUJBQU8sQ0FBQyxZQUFZLENBQUMsRUFBRTtRQUN0QixJQUFBLG9CQUFhLEVBQUMsdUJBQU8sQ0FBQyxZQUFZLENBQUM7UUFDbkMsOEJBQXVCLENBQUMsdUJBQU8s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